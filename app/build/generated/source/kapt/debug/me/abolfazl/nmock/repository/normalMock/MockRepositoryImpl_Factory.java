// Generated by Dagger (https://dagger.dev).
package me.abolfazl.nmock.repository.normalMock;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import me.abolfazl.nmock.model.database.mocks.normalMock.NormalMockDao;
import me.abolfazl.nmock.model.database.positions.normalPositions.NormalPositionDao;
import me.abolfazl.nmock.utils.logger.NMockLogger;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MockRepositoryImpl_Factory implements Factory<NormalMockRepositoryImpl> {
  private final Provider<NormalMockDao> normalMockDaoProvider;

  private final Provider<NormalPositionDao> normalPositionDaoProvider;

  private final Provider<NMockLogger> loggerProvider;

  private final Provider<String> androidIdProvider;

  private final Provider<String> mainDirectoryPathProvider;

  public MockRepositoryImpl_Factory(Provider<NormalMockDao> normalMockDaoProvider,
      Provider<NormalPositionDao> normalPositionDaoProvider, Provider<NMockLogger> loggerProvider,
      Provider<String> androidIdProvider, Provider<String> mainDirectoryPathProvider) {
    this.normalMockDaoProvider = normalMockDaoProvider;
    this.normalPositionDaoProvider = normalPositionDaoProvider;
    this.loggerProvider = loggerProvider;
    this.androidIdProvider = androidIdProvider;
    this.mainDirectoryPathProvider = mainDirectoryPathProvider;
  }

  @Override
  public NormalMockRepositoryImpl get() {
    return newInstance(normalMockDaoProvider.get(), normalPositionDaoProvider.get(), loggerProvider.get(), androidIdProvider.get(), mainDirectoryPathProvider.get());
  }

  public static MockRepositoryImpl_Factory create(Provider<NormalMockDao> normalMockDaoProvider,
      Provider<NormalPositionDao> normalPositionDaoProvider, Provider<NMockLogger> loggerProvider,
      Provider<String> androidIdProvider, Provider<String> mainDirectoryPathProvider) {
    return new MockRepositoryImpl_Factory(normalMockDaoProvider, normalPositionDaoProvider, loggerProvider, androidIdProvider, mainDirectoryPathProvider);
  }

  public static NormalMockRepositoryImpl newInstance(NormalMockDao normalMockDao,
                                                     NormalPositionDao normalPositionDao, NMockLogger logger, String androidId,
                                                     String mainDirectoryPath) {
    return new NormalMockRepositoryImpl(normalMockDao, normalPositionDao, logger, androidId, mainDirectoryPath);
  }
}
